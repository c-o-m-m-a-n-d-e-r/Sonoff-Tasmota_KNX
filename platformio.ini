; PlatformIO Project Configuration File for TASMOTA (tasmota.com)
;
;   Build options: build flags, source filter, extra scripting
;   Upload options: custom port, speed and extra flags
;   Library options: dependencies, extra library storages
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/en/stable/projectconf.html

[platformio]
src_dir = tasmota
build_dir = .pioenvs
build_cache_dir = .cache
extra_configs = platformio_override.ini
default_envs = 
; *********************** STEP 1 of 3 (FIRMWARE TYPE SELECTION) *************************
; *** Uncomment one or more of the lines below to build/upload desired firmware Types ***
; ***               or leave all commented to build all firmwares types               ***
; ***************************************************************************************
;                tasmota-minimal
;                tasmota_KNX-BG
;                tasmota_KNX-BR
;                tasmota_KNX-CN
;                tasmota_KNX-CZ
;                tasmota_KNX-DE
;                tasmota_KNX-EN
;                tasmota_KNX-ES
;                tasmota_KNX-FR
;                tasmota_KNX-GR
;                tasmota_KNX-HE
;                tasmota_KNX-HU
;                tasmota_KNX-IT
;                tasmota_KNX-KO
;                tasmota_KNX-NL
;                tasmota_KNX-PL
;                tasmota_KNX-PT
;                tasmota_KNX-RU
;                tasmota_KNX-SE
;                tasmota_KNX-SK
;                tasmota_KNX-TR
;                tasmota_KNX-TW
;                tasmota_KNX-UK
;                tasmota_KNX-DE_2MB
;                tasmota_KNX-EN_2MB
;                tasmota_KNX-ES_2MB
;                tasmota_KNX-DE_4MB
;                tasmota_KNX-EN_4MB
;                tasmota_KNX-ES_4MB
; **************** END STEP 1 of 3 (FIRMWARE TYPE SELECTION) ********************

[optionals]
build_firmware_conf       = 
; ****************** STEP 2 of 3 (USER CONFIG OVERRIDE SELECTION) ***************
; ***      Uncomment, by deleting ";" in line below, to use custom settings   ***
; ***                    from file <user_config_override.h>                   ***
; *******************************************************************************
;                            -DUSE_CONFIG_OVERRIDE
; **************** END STEP 2 of 3 (USER CONFIG OVERRIDE SELECTION) *************                          

; *** Optional Firmware configurations
;                            -DUSE_CLASSIC
;                            -DBE_MINIMAL
;                            -DUSE_SENSORS
;                            -DUSE_BASIC
;                            -DUSE_KNX_NO_EMULATION
;                            -DUSE_DISPLAYS
;                            -DFIRMWARE_IR
;                            -DFIRMWARE_IR_CUSTOM
; *** Optional Debug messages
;                            -DDEBUG_TASMOTA_CORE
;                            -DDEBUG_TASMOTA_DRIVER
;                            -DDEBUG_TASMOTA_SENSOR

; ********************** STEP 3 of 3 (SERIAL PORT SELECTION) ********************
; ***                      Select Serial Port for flashing                    ***
; *******************************************************************************
upload_port = COM18
; ******************** END STEP 3 of 3 (SERIAL PORT SELECTION) ****************** 
;NOTE - command to erase flash from windows console:   esptool.py --port COM31 erase_flash
;       command to flash from windows console:         esptool.py --port COM31 write_flash -fs 1MB -fm dout 0x0 tasmota.bin

; -------------------------------------------------------------------------------
; ***  The following options are not needed to be changed for standard use  ***
; -------------------------------------------------------------------------------

[common]
framework                 = arduino
board                     = esp01_1m
board_2MB                 = nodemcu
board_4MB                 = nodemcu
;board_4MB                 = nodemcuv2
board_build.flash_mode    = dout
platform                  = ${core_active.platform}

; *** Debug version used for PlatformIO Project Inspection - Choose one (Debug OR Release)
;build_type = debug
build_type = release

; *** Build flags from selected core
build_flags               = ${core_active.build_flags} ${optionals.build_firmware_conf}
build_flags_4mb           = ${core_active.build_flags_4mb} ${optionals.build_firmware_conf}

; *** Fix espressif8266@1.7.0 induced undesired all warnings
build_unflags             = -Wall

; *** Set CPU frequency to 80MHz (default) or 160MHz
board_build.f_cpu         = 80000000L
;board_build.f_cpu         = 160000000L

; *** Serial Monitor options
monitor_speed             = 115200

; *** Upload Serial reset method for Wemos and NodeMCU
upload_speed              = 115200
upload_resetmethod        = nodemcu
upload_port               = ${optionals.upload_port}

; *** Fix Esp/Arduino core 2.4.x induced Tasmota unused floating point includes
extra_scripts             = pio/strip-floats.py
                            pio/name-firmware.py
                            pio/gzip-firmware.py                            
;                            pio/obj-dump.py

; *** Upload file to OTA server using SCP
;upload_port               = user@host:/path
;extra_scripts             = pio/strip-floats.py, pio/sftp-uploader.py

; *** Upload file to OTA server in folder api/arduino using HTTP
;upload_port               = domus1:80/api/upload-arduino.php
;extra_scripts             = pio/strip-floats.py, pio/http-uploader.py

; -------------------------------------------------------------------------------

[core_active]
; *** Core set selection for platform and build_flags

; KNOWN SECURITY ISSUE - NOT RECOMMENDED
;platform                  = ${core_2_3_0.platform}
;build_flags               = ${core_2_3_0.build_flags} ${core_2_3_0.build_flags_1mb_mem}
;build_flags_2mb           = ${core_2_3_0.build_flags} ${core_2_3_0.build_flags_2mb_mem}
;build_flags_4mb           = ${core_2_3_0.build_flags} ${core_2_3_0.build_flags_4mb_mem}

; KNOWN SECURITY ISSUE - NOT RECOMMENDED
;platform                  = ${core_2_4_2.platform}
;build_flags               = ${core_2_4_2.build_flags} ${core_2_4_2.build_flags_1mb_mem}
;build_flags_2mb           = ${core_2_4_2.build_flags} ${core_2_4_2.build_flags_2mb_mem}
;build_flags_4mb           = ${core_2_4_2.build_flags} ${core_2_4_2.build_flags_4mb_mem}

; KNOWN MEMORY MANAGER ISSUE - NOT RECOMMENDED
;platform                  = ${core_2_5_0.platform}
;build_flags               = ${core_2_5_0.build_flags} ${core_2_5_0.build_flags_1mb_mem}
;build_flags_2mb           = ${core_2_5_0.build_flags} ${core_2_5_0.build_flags_2mb_mem}
;build_flags_4mb           = ${core_2_5_0.build_flags} ${core_2_5_0.build_flags_4mb_mem}

; KNOWN MEMORY MANAGER ISSUE - NOT RECOMMENDED
;platform                  = ${core_2_5_2.platform}
;build_flags               = ${core_2_5_2.build_flags} ${core_2_5_2.build_flags_1mb_mem}
;build_flags_2mb           = ${core_2_5_2.build_flags} ${core_2_5_2.build_flags_2mb_mem}
;build_flags_4mb           = ${core_2_5_2.build_flags} ${core_2_5_2.build_flags_4mb_mem}

; RECOMMENDED CORE (Tasmota default)
platform                  = ${core_2_6_1.platform}
build_flags               = ${core_2_6_1.build_flags} ${core_2_6_1.build_flags_1mb_mem}
build_flags_2mb           = ${core_2_6_1.build_flags} ${core_2_6_1.build_flags_2mb_mem}
build_flags_4mb           = ${core_2_6_1.build_flags} ${core_2_6_1.build_flags_4mb_mem}

; LATEST CORE
;platform                  = ${core_2_6_2.platform}
;build_flags               = ${core_2_6_2.build_flags} ${core_2_6_2.build_flags_1mb_mem}
;build_flags_2mb           = ${core_2_6_2.build_flags} ${core_2_6_2.build_flags_2mb_mem}
;build_flags_4mb           = ${core_2_6_2.build_flags} ${core_2_6_2.build_flags_4mb_mem}

; BETA TEST CORE
;platform                  = ${core_stage.platform}
;build_flags               = ${core_stage.build_flags} ${core_stage.build_flags_1mb_mem}
;build_flags_2mb           = ${core_stage.build_flags} ${core_stage.build_flags_2mb_mem}
;build_flags_4mb           = ${core_stage.build_flags} ${core_stage.build_flags_4mb_mem}

; -------------------------------------------------------------------------------

[core_2_3_0]
; *** Esp8266 core for Arduino version 2.3.0
platform                  = espressif8266@1.5.0

build_flags               = -D NDEBUG
                            -mtarget-align
                            -Wl,-Map,firmware.map

; 1MB FLASH DEVICE (this also works for higher flash capacity like 4MB devices)
build_flags_1mb_mem       = -Wl,-Tesp8266.flash.1m0.ld

; 2MB FLASH DEVICE (this DO NOT WORK FOR 1MB DEVICES)
build_flags_2mb_mem       =  -Wl,-Teagle.flash.2m.ld

; 4MB FLASH DEVICE (this DO NOT WORK FOR 1MB or 2MB DEVICES)
build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m1m.ld
;build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m0.ld
;build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m2m.ld

[core_2_4_2]
; *** Esp8266 core for Arduino version 2.4.2
platform                  = espressif8266@1.8.0

build_flags               = -D NDEBUG
                            -mtarget-align
                            -Wl,-Map,firmware.map
                            -lstdc++ -lsupc++
; lwIP 1.4 (Default)
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
; lwIP 2 - Low Memory
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
; lwIP 2 - Higher Bandwidth (Tasmota default)
                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
                            -DVTABLES_IN_FLASH

; 1MB FLASH DEVICE (this also works for higher flash capacity like 4MB devices)
build_flags_1mb_mem       = -Wl,-Teagle.flash.1m0.ld

; 2MB FLASH DEVICE (this DO NOT WORK FOR 1MB DEVICES)
build_flags_2mb_mem       =  -Wl,-Teagle.flash.2m.ld

; 4MB FLASH DEVICE (this DO NOT WORK FOR 1MB or 2MB DEVICES)
build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m1m.ld
;build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m0.ld                            
;build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m2m.ld                               

[core_2_5_0]
; *** Esp8266 core for Arduino version 2.5.0
platform                  = espressif8266@2.0.4

build_flags               = -D NDEBUG
                            -mtarget-align
                            -Wl,-Map,firmware.map
; lwIP 1.4 (Default)
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
; lwIP 2 - Low Memory
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
; lwIP 2 - Higher Bandwidth
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
; lwIP 2 - Higher Bandwidth Low Memory no Features
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
; lwIP 2 - Higher Bandwidth no Features (Tasmota default)
                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
; VTABLES in Flash (default)
                            -DVTABLES_IN_FLASH
; VTABLES in Heap
;                            -DVTABLES_IN_DRAM
; VTABLES in IRAM
;                            -DVTABLES_IN_IRAM
                            -fno-exceptions
                            -lstdc++
; Exception code in firmware /needs much space! 90k
;                           -fexceptions
;                           -lstdc++-exc
; Code optimization see https://github.com/esp8266/Arduino/issues/5790#issuecomment-475672473
                            -O2

; 1MB FLASH DEVICE (this also works for higher flash capacity like 4MB devices)
build_flags_1mb_mem       = -Wl,-Teagle.flash.1m.ld

; 2MB FLASH DEVICE (this DO NOT WORK FOR 1MB DEVICES)
build_flags_2mb_mem       =  -Wl,-Teagle.flash.2m.ld

; 4MB FLASH DEVICE (this DO NOT WORK FOR 1MB or 2MB DEVICES)
build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m1m.ld
;build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m0.ld
;build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m2m.ld

[core_2_5_2]
; *** Esp8266 core for Arduino version 2.5.2
platform                  = espressif8266@2.2.2

build_flags               = -D NDEBUG
                            -mtarget-align
                            -Wl,-Map,firmware.map
; nonos-sdk 22x
                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x
; nonos-sdk-pre-v3
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK3
; lwIP 1.4
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
; lwIP 2 - Low Memory
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
; lwIP 2 - Higher Bandwidth
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
; lwIP 2 - Higher Bandwidth Low Memory no Features
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
; lwIP 2 - Higher Bandwidth no Features (Tasmota default)
                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
; VTABLES in Flash (default)
                            -DVTABLES_IN_FLASH
; VTABLES in Heap
;                            -DVTABLES_IN_DRAM
; VTABLES in IRAM
;                            -DVTABLES_IN_IRAM
                            -fno-exceptions
                            -lstdc++
; Exception code in firmware /needs much space! 90k
;                           -fexceptions
;                           -lstdc++-exc
; Code optimization see https://github.com/esp8266/Arduino/issues/5790#issuecomment-475672473
                            -O2
                            -DBEARSSL_SSL_BASIC
; link with an memory optimized version of lib_bearssl
                            -Llib_bearssl -lbearssl

; 1MB FLASH DEVICE (this also works for higher flash capacity like 4MB devices)
build_flags_1mb_mem       = -Wl,-Teagle.flash.1m.ld

; 2MB FLASH DEVICE (this DO NOT WORK FOR 1MB DEVICES)
build_flags_2mb_mem       =  -Wl,-Teagle.flash.2m.ld

; 4MB FLASH DEVICE (this DO NOT WORK FOR 1MB or 2MB DEVICES)
build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m1m.ld
;build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m0.ld
;build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m2m.ld

[core_2_6_1]
; *** Esp8266 core for Arduino version 2.6.1
platform                  = espressif8266@2.3.0

build_flags               = -D NDEBUG
                            -mtarget-align
                            -Wl,-Map,firmware.map
; NONOSDK221 (Known issues - mqtt reconnections)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK221
; NONOSDK22x_190313 (Known issues - mqtt reconnections)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190313
; NONOSDK22x_190703 = 2.2.1+100-dev(38a443e) (Tasmota default) (Firmware 2K smaller than NONOSDK22x_191105)
                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
; NONOSDK22x_191024 = 2.2.1+111-dev(5ab15d1)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_191024
; NONOSDK22x_191105 = 2.2.1+113-dev(bb83b9b)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_191105
; NONOSDK3V0 (known issues - Not recommended)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK3
; lwIP 1.4
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
; lwIP 2 - Low Memory
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
; lwIP 2 - Higher Bandwidth
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
; lwIP 2 - Higher Bandwidth Low Memory no Features
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
; lwIP 2 - Higher Bandwidth no Features (Tasmota default)
                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
; lwIP 2 - Higher Bandwidth IPv6
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_IPV6_HIGHER_BANDWIDTH
; VTABLES in Flash (default)
                            -DVTABLES_IN_FLASH
; VTABLES in Heap
;                            -DVTABLES_IN_DRAM
; VTABLES in IRAM
;                            -DVTABLES_IN_IRAM
                            -fno-exceptions
                            -lstdc++
; Code optimization see https://github.com/esp8266/Arduino/issues/5790#issuecomment-475672473
                            -O2
                            -DBEARSSL_SSL_BASIC
; link with an memory optimized version of lib_bearssl
                            -Llib_bearssl -lbearssl

; 1MB FLASH DEVICE (this also works for higher flash capacity like 4MB devices)
build_flags_1mb_mem       = -Wl,-Teagle.flash.1m.ld

; 2MB FLASH DEVICE (this DO NOT WORK FOR 1MB DEVICES)
build_flags_2mb_mem       =  -Wl,-Teagle.flash.2m.ld

; 4MB FLASH DEVICE (this DO NOT WORK FOR 1MB or 2MB DEVICES)
build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m1m.ld
;build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m0.ld
;build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m2m.ld

[core_2_6_2]
; *** Esp8266 core for Arduino version 2.6.2
platform                  = espressif8266@2.3.1

build_flags               = -D NDEBUG
                            -mtarget-align
                            -Wl,-Map,firmware.map
; NONOSDK221 (Known issues - mqtt reconnections)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK221
; NONOSDK22x_190313 (Known issues - mqtt reconnections)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190313
; NONOSDK22x_190703 = 2.2.1+100-dev(38a443e) (Tasmota default) (Firmware 2K smaller than NONOSDK22x_191105)
                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
; NONOSDK22x_191024 = 2.2.1+111-dev(5ab15d1)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_191024
; NONOSDK22x_191105 = 2.2.1+113-dev(bb83b9b)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_191105
; NONOSDK3V0 (known issues - Not recommended)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK3
; lwIP 1.4
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
; lwIP 2 - Low Memory
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
; lwIP 2 - Higher Bandwidth
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
; lwIP 2 - Higher Bandwidth Low Memory no Features
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
; lwIP 2 - Higher Bandwidth no Features (Tasmota default)
                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
; lwIP 2 - Higher Bandwidth IPv6
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_IPV6_HIGHER_BANDWIDTH
; VTABLES in Flash (default)
                            -DVTABLES_IN_FLASH
; VTABLES in Heap
;                            -DVTABLES_IN_DRAM
; VTABLES in IRAM
;                            -DVTABLES_IN_IRAM
                            -fno-exceptions
                            -lstdc++
; Code optimization see https://github.com/esp8266/Arduino/issues/5790#issuecomment-475672473
                            -O2
                            -DBEARSSL_SSL_BASIC
; link with an memory optimized version of lib_bearssl
                            -Llib_bearssl -lbearssl

; 1MB FLASH DEVICE (this also works for higher flash capacity like 4MB devices)
build_flags_1mb_mem       = -Wl,-Teagle.flash.1m.ld

; 2MB FLASH DEVICE (this DO NOT WORK FOR 1MB DEVICES)
build_flags_2mb_mem       =  -Wl,-Teagle.flash.2m.ld

; 4MB FLASH DEVICE (this DO NOT WORK FOR 1MB or 2MB DEVICES)
build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m1m.ld
;build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m0.ld
;build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m2m.ld

[core_stage]
; *** Esp8266 core for Arduino version latest beta
platform                  = https://github.com/platformio/platform-espressif8266.git#feature/stage

build_flags               = -D NDEBUG
                            -mtarget-align
                            -Wl,-Map,firmware.map
; NONOSDK221 (Known issues - mqtt reconnections)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK221
; NONOSDK22x_190313 (Known issues - mqtt reconnections)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190313
; NONOSDK22x_190703 = 2.2.1+100-dev(38a443e) (Tasmota default) (Firmware 2K smaller than NONOSDK22x_191105)
                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
; NONOSDK22x_191024 = 2.2.1+111-dev(5ab15d1)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_191024
; NONOSDK22x_191105 = 2.2.1+113-dev(bb83b9b)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_191105
; NONOSDK22x_191122 = 2.2.1+119-dev(a58da79)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_191122
; NONOSDK3V0 (known issues - Not recommended)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK3
; lwIP 1.4
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
; lwIP 2 - Low Memory
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
; lwIP 2 - Higher Bandwidth
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
; lwIP 2 - Higher Bandwidth Low Memory no Features
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
; lwIP 2 - Higher Bandwidth no Features (Tasmota default)
                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
; lwIP 2 - Higher Bandwidth IPv6
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_IPV6_HIGHER_BANDWIDTH
; VTABLES in Flash (default)
                            -DVTABLES_IN_FLASH
; VTABLES in Heap
;                            -DVTABLES_IN_DRAM
; VTABLES in IRAM
;                            -DVTABLES_IN_IRAM
                            -fno-exceptions
                            -lstdc++
; Code optimization see https://github.com/esp8266/Arduino/issues/5790#issuecomment-475672473
                            -O2
                            -DBEARSSL_SSL_BASIC
; link with an memory optimized version of lib_bearssl
                            -Llib_bearssl -lbearssl

; 1MB FLASH DEVICE (this also works for higher flash capacity like 4MB devices)
build_flags_1mb_mem       = -Wl,-Teagle.flash.1m.ld

; 2MB FLASH DEVICE (this DO NOT WORK FOR 1MB DEVICES)
build_flags_2mb_mem       =  -Wl,-Teagle.flash.2m.ld

; 4MB FLASH DEVICE (this DO NOT WORK FOR 1MB or 2MB DEVICES)
build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m1m.ld
;build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m0.ld
;build_flags_4mb_mem       =  -Wl,-Tesp8266.flash.4m2m.ld

; -------------------------------------------------------------------------------

[env:tasmota-minimal]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DFIRMWARE_MINIMAL
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-BG]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=bg-BG
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-BR]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=pt-BR
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-CN]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=zh-CN
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-CZ]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=cs-CZ
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-DE]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=de-DE
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-EN]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags}
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-ES]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=es-ES
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-FR]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=fr-FR
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-GR]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=el-GR
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-HE]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=he-HE
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-HU]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=hu-HU
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-IT]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=it-IT
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-KO]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=ko-KO
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-NL]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=nl-NL
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-PL]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=pl-PL
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-PT]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=pt-PT
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-RU]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=ru-RU
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-SE]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=sv-SE
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-SK]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=sk-SK
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-TR]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=tr-TR
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-TW]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=zh-TW
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-UK]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -DMY_LANGUAGE=uk-UK
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-DE_2MB]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board_2MB}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_2mb} -DMY_LANGUAGE=de-DE -DMODULE=WEMOS
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-EN_2MB]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board_2MB}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_2mb} -DMODULE=WEMOS
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-ES_2MB]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board_2MB}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_2mb} -DMY_LANGUAGE=es-ES -DMODULE=WEMOS
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-DE_4MB]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board_4MB}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_4mb} -DMY_LANGUAGE=de-DE -DMODULE=WEMOS
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-EN_4MB]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board_4MB}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_4mb} -DMODULE=WEMOS
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota_KNX-ES_4MB]
platform = ${common.platform}
framework = ${common.framework}
build_type = ${common.build_type}
board = ${common.board_4MB}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_4mb} -DMY_LANGUAGE=es-ES -DMODULE=WEMOS
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}
